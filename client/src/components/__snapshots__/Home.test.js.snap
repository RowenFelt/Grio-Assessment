// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Homepage tests Homepage snapshot test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Homepage
    authToken="mock token"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <styled.div>
        <h3
          className="shift-right"
        >
          Count: 
          0
        </h3>
        <styled.button
          className="shift-right-more"
          onClick={[Function]}
        >
          Increment
        </styled.button>
        <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          closeTimeoutMS={0}
          contentLabel="Increment confirmation modal window"
          isOpen={false}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
          style={
            Object {
              "content": Object {
                "bottom": "auto",
                "left": "50%",
                "marginRight": "-50%",
                "right": "auto",
                "top": "50%",
                "transform": "translate(-50%, -50%)",
              },
            }
          }
        >
          <h3>
            Current count: 
            0
          </h3>
          <h3>
            Next count: 
            0
          </h3>
          <button
            onClick={[Function]}
          >
            Cancel
          </button>
          <button
            onClick={[Function]}
          >
            Confirm
          </button>
        </Modal>
      </styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <h3
            className="shift-right"
          >
            Count: 
            0
          </h3>,
          <styled.button
            className="shift-right-more"
            onClick={[Function]}
          >
            Increment
          </styled.button>,
          <Modal
            ariaHideApp={true}
            bodyOpenClassName="ReactModal__Body--open"
            closeTimeoutMS={0}
            contentLabel="Increment confirmation modal window"
            isOpen={false}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "bottom": "auto",
                  "left": "50%",
                  "marginRight": "-50%",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          >
            <h3>
              Current count: 
              0
            </h3>
            <h3>
              Next count: 
              0
            </h3>
            <button
              onClick={[Function]}
            >
              Cancel
            </button>
            <button
              onClick={[Function]}
            >
              Confirm
            </button>
          </Modal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Count: ",
              0,
            ],
            "className": "shift-right",
          },
          "ref": null,
          "rendered": Array [
            "Count: ",
            0,
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Increment",
            "className": "shift-right-more",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Increment",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ariaHideApp": true,
            "bodyOpenClassName": "ReactModal__Body--open",
            "children": Array [
              <h3>
                Current count: 
                0
              </h3>,
              <h3>
                Next count: 
                0
              </h3>,
              <button
                onClick={[Function]}
              >
                Cancel
              </button>,
              <button
                onClick={[Function]}
              >
                Confirm
              </button>,
            ],
            "closeTimeoutMS": 0,
            "contentLabel": "Increment confirmation modal window",
            "isOpen": false,
            "parentSelector": [Function],
            "portalClassName": "ReactModalPortal",
            "role": "dialog",
            "shouldCloseOnEsc": true,
            "shouldCloseOnOverlayClick": true,
            "shouldFocusAfterRender": true,
            "shouldReturnFocusAfterClose": true,
            "style": Object {
              "content": Object {
                "bottom": "auto",
                "left": "50%",
                "marginRight": "-50%",
                "right": "auto",
                "top": "50%",
                "transform": "translate(-50%, -50%)",
              },
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Current count: ",
                  0,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Current count: ",
                0,
              ],
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Next count: ",
                  0,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Next count: ",
                0,
              ],
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Confirm",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Confirm",
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <styled.div>
          <h3
            className="shift-right"
          >
            Count: 
            0
          </h3>
          <styled.button
            className="shift-right-more"
            onClick={[Function]}
          >
            Increment
          </styled.button>
          <Modal
            ariaHideApp={true}
            bodyOpenClassName="ReactModal__Body--open"
            closeTimeoutMS={0}
            contentLabel="Increment confirmation modal window"
            isOpen={false}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "bottom": "auto",
                  "left": "50%",
                  "marginRight": "-50%",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          >
            <h3>
              Current count: 
              0
            </h3>
            <h3>
              Next count: 
              0
            </h3>
            <button
              onClick={[Function]}
            >
              Cancel
            </button>
            <button
              onClick={[Function]}
            >
              Confirm
            </button>
          </Modal>
        </styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <h3
              className="shift-right"
            >
              Count: 
              0
            </h3>,
            <styled.button
              className="shift-right-more"
              onClick={[Function]}
            >
              Increment
            </styled.button>,
            <Modal
              ariaHideApp={true}
              bodyOpenClassName="ReactModal__Body--open"
              closeTimeoutMS={0}
              contentLabel="Increment confirmation modal window"
              isOpen={false}
              parentSelector={[Function]}
              portalClassName="ReactModalPortal"
              role="dialog"
              shouldCloseOnEsc={true}
              shouldCloseOnOverlayClick={true}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              style={
                Object {
                  "content": Object {
                    "bottom": "auto",
                    "left": "50%",
                    "marginRight": "-50%",
                    "right": "auto",
                    "top": "50%",
                    "transform": "translate(-50%, -50%)",
                  },
                }
              }
            >
              <h3>
                Current count: 
                0
              </h3>
              <h3>
                Next count: 
                0
              </h3>
              <button
                onClick={[Function]}
              >
                Cancel
              </button>
              <button
                onClick={[Function]}
              >
                Confirm
              </button>
            </Modal>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Count: ",
                0,
              ],
              "className": "shift-right",
            },
            "ref": null,
            "rendered": Array [
              "Count: ",
              0,
            ],
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Increment",
              "className": "shift-right-more",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Increment",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ariaHideApp": true,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": Array [
                <h3>
                  Current count: 
                  0
                </h3>,
                <h3>
                  Next count: 
                  0
                </h3>,
                <button
                  onClick={[Function]}
                >
                  Cancel
                </button>,
                <button
                  onClick={[Function]}
                >
                  Confirm
                </button>,
              ],
              "closeTimeoutMS": 0,
              "contentLabel": "Increment confirmation modal window",
              "isOpen": false,
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "role": "dialog",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
              "style": Object {
                "content": Object {
                  "bottom": "auto",
                  "left": "50%",
                  "marginRight": "-50%",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Current count: ",
                    0,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Current count: ",
                  0,
                ],
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Next count: ",
                    0,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Next count: ",
                  0,
                ],
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Confirm",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Confirm",
                "type": "button",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
